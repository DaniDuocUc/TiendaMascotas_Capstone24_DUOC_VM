{
  "openapi": "3.0.0",
  "info": {
    "title": "Farming IoT API",
    "version": "1.0.0",
    "description": "API documentation for Farming IoT backend"
  },
  "servers": [
    {
      "url": "https://dev-iot-backend.farmingsmart.cl/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/device": {
      "post": {
        "tags": ["Devices"],
        "summary": "Submit IoT device data",
        "description": "Receives data from IoT devices, including air_temperature, air_humidity, and optionally soil_humidity. An API key is required in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": {
                    "type": "string",
                    "description": "ID of the IoT device."
                  },
                  "air_temperature": {
                    "type": "number",
                    "description": "Air temperature reading from the device."
                  },
                  "air_humidity": {
                    "type": "number",
                    "description": "Air humidity reading from the device."
                  },
                  "soil_humidity": {
                    "type": "number",
                    "description": "Soil humidity reading from the device (optional)."
                  }
                },
                "example": {
                  "device_id": "1",
                  "air_temperature": 14,
                  "air_humidity": 32,
                  "soil_humidity": 100
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data stored successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Data stored successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "device_id": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "air_temperature": {
                          "type": "number"
                        },
                        "air_humidity": {
                          "type": "number"
                        },
                        "soil_humidity": {
                          "type": "number"
                        },
                        "product_name": {
                          "type": "string"
                        },
                        "area": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": 97624,
                        "device_id": "1",
                        "timestamp": "2024-10-09T00:33:01.527Z",
                        "air_temperature": 14,
                        "air_humidity": 32,
                        "soil_humidity": 100,
                        "product_name": "Tomates",
                        "area": "0103000020E610000001000000050000005DE2C80391CE51C050C24CDBBF6A40C075E5B33C8FCE51C050C24CDBBF6A40C075E5B33C8FCE51C0C95A43A9BD6A40C05DE2C80391CE51C0C95A43A9BD6A40C05DE2C80391CE51C050C24CDBBF6A40C0"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid data. Please ensure all required fields (device_id, air_temperature, air_humidity, soil_humidity) are provided and valid."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while storing the data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while storing the data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/averages": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get average air temperature, air humidity, and soil humidity for devices",
        "description": "Returns the average air temperature, air humidity, and soil humidity for devices within a specified time range. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "query",
            "name": "start_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The start of the time range in ISO 8601 format 'YYYY-MM-DDTHH:MM:SS' (e.g., '2024-10-01T10:30:00')."
          },
          {
            "in": "query",
            "name": "end_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The end of the time range in ISO 8601 format 'YYYY-MM-DDTHH:MM:SS' (e.g., '2024-10-01T11:30:00')."
          }
        ],
        "responses": {
          "200": {
            "description": "Average air temperature, air humidity, soil humidity, area, and status for each device in the time range.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_time": {
                      "type": "string",
                      "example": "08/10/2024 - 21:32:25"
                    },
                    "time_range": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "devices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device_id": {
                            "type": "string"
                          },
                          "average_air_temperature": {
                            "type": "number"
                          },
                          "average_air_humidity": {
                            "type": "number"
                          },
                          "average_soil_humidity": {
                            "type": "number"
                          },
                          "area": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "Polygon"
                              },
                              "coordinates": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            },
                            "nullable": true
                          },
                          "status": {
                            "type": "string"
                          },
                          "product_name": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "example": [
                        {
                          "device_id": "1",
                          "average_air_temperature": "13.33",
                          "average_air_humidity": "70.33",
                          "average_soil_humidity": "100.00",
                          "area": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [-71.227601, -32.83398],
                                [-71.2274925, -32.83398],
                                [-71.2274925, -32.833913],
                                [-71.227601, -32.833913],
                                [-71.227601, -32.83398]
                              ]
                            ]
                          },
                          "status": "red",
                          "product_name": "Tomates"
                        },
                        {
                          "device_id": "2",
                          "average_air_temperature": "11.00",
                          "average_air_humidity": "100.00",
                          "average_soil_humidity": "100.00",
                          "area": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [-71.2274925, -32.83398],
                                [-71.227384, -32.83398],
                                [-71.227384, -32.833913],
                                [-71.2274925, -32.833913],
                                [-71.2274925, -32.83398]
                              ]
                            ]
                          },
                          "status": "red",
                          "product_name": "Tomates"
                        },
                        {
                          "device_id": "4",
                          "average_air_temperature": "14.00",
                          "average_air_humidity": "21.50",
                          "average_soil_humidity": "100.00",
                          "area": null,
                          "status": "red",
                          "product_name": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Please provide both start_time and end_time, or leave both empty for the default time range."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/averages-by-seconds": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get average air temperature, air humidity, and soil humidity for devices within the last X seconds",
        "description": "Returns the average air temperature, air humidity, and soil humidity for devices in the last X seconds. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "query",
            "name": "seconds",
            "schema": {
              "type": "integer",
              "description": "The time range in seconds (between 60 and 86400 seconds)."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Average air temperature, air humidity, soil humidity, area, and status for each device within the last X seconds.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_time": {
                      "type": "string",
                      "example": "08/10/2024 - 21:32:25"
                    },
                    "devices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device_id": {
                            "type": "string"
                          },
                          "average_air_temperature": {
                            "type": "number"
                          },
                          "average_air_humidity": {
                            "type": "number"
                          },
                          "average_soil_humidity": {
                            "type": "number"
                          },
                          "area": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "Polygon"
                              },
                              "coordinates": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            },
                            "nullable": true
                          },
                          "status": {
                            "type": "string"
                          },
                          "product_name": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "example": [
                        {
                          "device_id": "1",
                          "average_air_temperature": "13.33",
                          "average_air_humidity": "70.33",
                          "average_soil_humidity": "100.00",
                          "area": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [-71.227601, -32.83398],
                                [-71.2274925, -32.83398],
                                [-71.2274925, -32.833913],
                                [-71.227601, -32.833913],
                                [-71.227601, -32.83398]
                              ]
                            ]
                          },
                          "status": "red",
                          "product_name": "Tomates"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The time range must be between 60 seconds (1 minute) and 86400 seconds (24 hours)."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/daily-humidity-averages": {
      "get": {
        "tags": ["Devices"],
        "summary": "Get daily humidity averages for devices within a date range",
        "description": "Fetches the daily average humidity readings for IoT devices between start_date and end_date. The date range cannot exceed 7 days.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-10-15"
            },
            "description": "Start date in YYYY-MM-DD format"
          },
          {
            "in": "query",
            "name": "end_date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-10-21"
            },
            "description": "End date in YYYY-MM-DD format. Must not exceed 7 days from start_date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with daily humidity averages for devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report_date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-10-21"
                        },
                        "start_date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-10-15"
                        },
                        "end_date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-10-21"
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "zona": {
                                "type": "integer",
                                "example": 1
                              },
                              "devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "device_id": {
                                      "type": "string",
                                      "example": "IOT N°1"
                                    },
                                    "humidity_readings": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "number",
                                        "example": 55.4
                                      },
                                      "description": "Humidity readings by day"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "status": "success",
                      "data": {
                        "report_date": "2024-10-21",
                        "start_date": "2024-10-15",
                        "end_date": "2024-10-21",
                        "zones": [
                          {
                            "zona": 1,
                            "devices": [
                              {
                                "device_id": "IOT N°1",
                                "humidity_readings": {
                                  "2024-10-15": 55.4,
                                  "2024-10-16": 60.2,
                                  "2024-10-17": 57.3
                                }
                              },
                              {
                                "device_id": "IOT N°2",
                                "humidity_readings": {
                                  "2024-10-15": 62.1,
                                  "2024-10-16": 59.8,
                                  "2024-10-17": 61.3
                                }
                              }
                            ]
                          },
                          {
                            "zona": 2,
                            "devices": [
                              {
                                "device_id": "IOT N°3",
                                "humidity_readings": {
                                  "2024-10-15": 49.5,
                                  "2024-10-16": 52.4,
                                  "2024-10-17": 53.8
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Possible issues include missing start_date or end_date, invalid date format, or date range exceeding 7 days.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid date format. Use YYYY-MM-DD."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error. An error occurred while fetching data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching data."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/alert": {
      "post": {
        "tags": ["Alerts"],
        "summary": "Create a new alert",
        "description": "Create a new alert for monitoring soil humidity. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "ID of the product."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the alert."
                  },
                  "condition": {
                    "type": "string",
                    "description": "Condition to monitor, must be 'soil_humidity'.",
                    "example": "soil_humidity"
                  },
                  "operator": {
                    "type": "string",
                    "description": "Operator for the alert condition.",
                    "enum": [">", "<", ">=", "<=", "="],
                    "example": ">"
                  },
                  "threshold": {
                    "type": "number",
                    "description": "Threshold value for the alert.",
                    "example": 80
                  },
                  "time_window": {
                    "type": "integer",
                    "description": "Time window in minutes during which the condition must be met (1 minute to 1440 minutes).",
                    "example": 60
                  },
                  "emails": {
                    "type": "string",
                    "description": "Comma-separated list of email addresses to notify.",
                    "example": "alert1@example.com,alert2@example.com"
                  },
                  "status": {
                    "type": "boolean",
                    "description": "Status of the alert (true for active, false for inactive).",
                    "example": true
                  }
                },
                "required": [
                  "product_id",
                  "name",
                  "condition",
                  "operator",
                  "threshold",
                  "time_window",
                  "emails",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Alert created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 44
                        },
                        "product_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Humedad del suelo mayor a 80 en un minuto"
                        },
                        "condition": {
                          "type": "string",
                          "example": "soil_humidity"
                        },
                        "operator": {
                          "type": "string",
                          "example": ">"
                        },
                        "threshold": {
                          "type": "number",
                          "example": 90
                        },
                        "time_window": {
                          "type": "integer",
                          "example": 1
                        },
                        "emails": {
                          "type": "string",
                          "example": "alert1@example.com,alert2@example.com"
                        },
                        "status": {
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-10-21T03:58:18.487Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-10-21T03:58:18.487Z"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": null
                        },
                        "metric": {
                          "type": "string",
                          "example": "AVG"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data or missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields: product_id, name, condition, operator, threshold, emails, status, time_window"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while creating the alert.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while creating the alert."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/alert/{id}": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Get alert by ID",
        "description": "Fetches a single alert by its ID. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the alert to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Alert details fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_time": {
                      "type": "string",
                      "example": "18/10/2024 - 14:03:53"
                    },
                    "alert": {
                      "type": "object",
                      "properties": {
                        "alert_id": {
                          "type": "integer",
                          "example": 19
                        },
                        "product_name": {
                          "type": "string",
                          "example": "Tomates"
                        },
                        "alert_name": {
                          "type": "string",
                          "example": "Humedad del suelo menor a 70 en un minuto"
                        },
                        "condition": {
                          "type": "string",
                          "example": "Humedad Tierra"
                        },
                        "operator": {
                          "type": "string",
                          "example": "Menor que"
                        },
                        "threshold": {
                          "type": "number",
                          "example": 70
                        },
                        "time_window": {
                          "type": "string",
                          "example": "1 minuto"
                        },
                        "metric": {
                          "type": "string",
                          "example": "Promedio"
                        },
                        "emails": {
                          "type": "string",
                          "example": "example@example.com"
                        },
                        "status": {
                          "type": "string",
                          "example": "Activa"
                        },
                        "last_triggered_at": {
                          "type": "string",
                          "example": "2024-10-10 13:00:00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The ID must be a numeric value."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert with id 19 not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching the alert",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching the alert."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Alerts"],
        "summary": "Update an existing alert",
        "description": "Edit an existing alert for monitoring soil humidity. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the alert to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "ID of the product."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the alert."
                  },
                  "condition": {
                    "type": "string",
                    "description": "Condition to monitor, must be 'soil_humidity'.",
                    "example": "soil_humidity"
                  },
                  "operator": {
                    "type": "string",
                    "description": "Operator for the alert condition.",
                    "enum": [">", "<", ">=", "<=", "="],
                    "example": ">"
                  },
                  "threshold": {
                    "type": "number",
                    "description": "Threshold value for the alert.",
                    "example": 90
                  },
                  "time_window": {
                    "type": "integer",
                    "description": "Time window in minutes during which the condition must be met (1 minute to 1440 minutes).",
                    "example": 1
                  },
                  "emails": {
                    "type": "string",
                    "description": "Comma-separated list of email addresses to notify.",
                    "example": "example1@gmail.com,example2@gmail.com"
                  },
                  "status": {
                    "type": "boolean",
                    "description": "Status of the alert (true for active, false for inactive).",
                    "example": true
                  },
                  "metric": {
                    "type": "string",
                    "description": "The metric type (e.g., AVG).",
                    "example": "AVG"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert updated successfully"
                    },
                    "alert": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "condition": {
                          "type": "string"
                        },
                        "operator": {
                          "type": "string"
                        },
                        "threshold": {
                          "type": "number"
                        },
                        "time_window": {
                          "type": "integer"
                        },
                        "emails": {
                          "type": "string",
                          "example": "example_user@gmail.com"
                        },
                        "status": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "deleted_at": {
                          "type": "string",
                          "nullable": true,
                          "format": "date-time"
                        },
                        "metric": {
                          "type": "string",
                          "example": "AVG"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request due to validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid operator. Allowed operators are: >, <, >=, <=, ="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while updating the alert.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while updating the alert."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Alerts"],
        "summary": "Soft delete an alert",
        "description": "Marks an alert as deleted by setting its status to false and adding the current date to `deleted_at`. Requires an API key in the headers.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the alert to delete",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          }
        ],
        "responses": {
          "200": {
            "description": "Alert deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert deleted successfully"
                    },
                    "alert": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 43
                        },
                        "product_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Humedad del suelo mayor a 80 en un minuto"
                        },
                        "condition": {
                          "type": "string",
                          "example": "soil_humidity"
                        },
                        "operator": {
                          "type": "string",
                          "example": ">"
                        },
                        "threshold": {
                          "type": "string",
                          "example": "90"
                        },
                        "time_window": {
                          "type": "integer",
                          "example": 1
                        },
                        "emails": {
                          "type": "string",
                          "example": "joseriquelme22@gmail.com"
                        },
                        "status": {
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2024-10-20T05:03:48.033Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2024-10-20T05:03:48.033Z"
                        },
                        "deleted_at": {
                          "type": "string",
                          "example": "2024-10-21T00:38:09.146Z"
                        },
                        "metric": {
                          "type": "string",
                          "example": "AVG"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The ID must be a numeric value."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while deleting the alert"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/alerts": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Get paginated alerts",
        "description": "Returns a list of alerts, paginated. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination. Defaults to 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page. Defaults to 10."
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_time": {
                      "type": "string",
                      "example": "18/10/2024 - 13:50:30"
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "total_pages": {
                      "type": "integer",
                      "example": 3
                    },
                    "total_alerts": {
                      "type": "integer",
                      "example": 13
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "alert_id": {
                            "type": "integer",
                            "example": 19
                          },
                          "product_name": {
                            "type": "string",
                            "example": "Tomates"
                          },
                          "alert_name": {
                            "type": "string",
                            "example": "Humedad del suelo menor a 70 en un minuto"
                          },
                          "condition": {
                            "type": "string",
                            "example": "Humedad Tierra"
                          },
                          "operator": {
                            "type": "string",
                            "example": "Menor que"
                          },
                          "threshold": {
                            "type": "number",
                            "example": 70
                          },
                          "time_window": {
                            "type": "string",
                            "example": "1 minuto"
                          },
                          "metric": {
                            "type": "string",
                            "example": "Promedio"
                          },
                          "emails": {
                            "type": "string",
                            "example": "joseriquelme22@gmail.com"
                          },
                          "status": {
                            "type": "string",
                            "example": "Activa"
                          },
                          "last_triggered_at": {
                            "type": "string",
                            "example": "2024-10-10 13:00:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching alerts."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/alerts/triggered": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Get paginated triggered alerts",
        "description": "Returns a list of triggered alerts, paginated and ordered by the most recent triggered date. Requires an API key in the headers.",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination. Defaults to 1."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page. Defaults to 10."
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of triggered alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_time": {
                      "type": "string",
                      "example": "18/10/2024 - 13:56:08"
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 2
                    },
                    "total_pages": {
                      "type": "integer",
                      "example": 5
                    },
                    "total_triggered_alerts": {
                      "type": "integer",
                      "example": 10
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 8
                          },
                          "alert_id": {
                            "type": "integer",
                            "example": 26
                          },
                          "device_id": {
                            "type": "string",
                            "example": "1"
                          },
                          "alert_name": {
                            "type": "string",
                            "example": "High Soil Humidity Warning"
                          },
                          "product_name": {
                            "type": "string",
                            "example": "Tomates"
                          },
                          "condition": {
                            "type": "string",
                            "example": "Humedad Tierra"
                          },
                          "operator": {
                            "type": "string",
                            "example": "Mayor que"
                          },
                          "threshold": {
                            "type": "number",
                            "example": 85
                          },
                          "time_window": {
                            "type": "string",
                            "example": "35 minutos"
                          },
                          "triggered_threshold_value": {
                            "type": "number",
                            "example": 87
                          },
                          "metric": {
                            "type": "string",
                            "example": "Promedio"
                          },
                          "triggered_at": {
                            "type": "string",
                            "example": "2024-10-17 20:00:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching triggered alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching triggered alerts."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/email/send": {
      "post": {
        "tags": ["Email"],
        "summary": "Send an email with optional attachment",
        "description": "This endpoint allows you to send an email with a dynamic template and an optional attachment.",
        "operationId": "sendEmail",
        "parameters": [
          {
            "in": "header",
            "name": "API-Key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The API key for authorization."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "string",
                    "description": "Recipient email address (comma-separated for multiple recipients).",
                    "example": "recipient@example.com, another@example.com"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the email.",
                    "example": "Your Account Has Been Updated"
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "HTML content of the email to replace `{{content}}` in the template.",
                    "example": "<p>Your account details have been updated successfully.</p>"
                  },
                  "attachment": {
                    "type": "string",
                    "format": "binary",
                    "description": "Optional file to attach to the email."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "accepted": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["recipient@example.com"]
                        },
                        "rejected": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": []
                        },
                        "ehlo": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["AUTH LOGIN PLAIN", "SIZE 32505856"]
                        },
                        "envelopeTime": {
                          "type": "integer",
                          "example": 555
                        },
                        "messageTime": {
                          "type": "integer",
                          "example": 1230
                        },
                        "messageSize": {
                          "type": "integer",
                          "example": 327725
                        },
                        "response": {
                          "type": "string",
                          "example": "250 Message received"
                        },
                        "envelope": {
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string",
                              "example": "no-reply@example.com"
                            },
                            "to": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["recipient@example.com"]
                            }
                          }
                        },
                        "messageId": {
                          "type": "string",
                          "example": "<99e0796c-e44a-56c3-1b1a-9eefa52dec1a@example.com>"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing required fields or invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields: to, subject, htmlContent."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to send email due to server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to send email"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
